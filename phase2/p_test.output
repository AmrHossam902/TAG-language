Terminals unused in grammar

   UNKNOWN
   DECL_STMNT
   ASSI_STMNT
   DECL_ASSI_STMNT
   CONST_DECL_STMNT
   EMPTY_STMNT
   ASSI_LIST
   DECL_LIST
   SWBODY
   LIST
   NOT
   "="


Grammar

    0 $accept: list $end

    1 list: statement list
    2     | %empty
    3     | susp

    4 expr: '(' expr ')'
    5     | expr '+' expr
    6     | expr '-' expr
    7     | expr '/' expr
    8     | expr '*' expr
    9     | '-' expr
   10     | expr AND expr
   11     | expr OR expr
   12     | expr XOR expr
   13     | expr EE expr
   14     | expr NE expr
   15     | expr LT expr
   16     | expr GT expr
   17     | expr LE expr
   18     | expr GE expr
   19     | '!' expr
   20     | BOOL_VAL
   21     | INT_VAL
   22     | DOUBLE_VAL
   23     | STRING_VAL
   24     | ID
   25     | '(' expr error
   26     | expr '+' error
   27     | expr '-' error
   28     | expr '/' error
   29     | expr '*' error
   30     | '-' error
   31     | expr AND error
   32     | expr OR error
   33     | expr XOR error
   34     | expr EE error
   35     | expr NE error
   36     | expr LT error
   37     | expr GT error
   38     | expr LE error
   39     | expr GE error
   40     | '!' error

   41 assi_stmnt: ID '=' expr

   42 decl_stmnt: ID_TYPE assi_stmnt

   43 statement: ';'
   44          | assi_stmnt ';'
   45          | decl_stmnt ';'
   46          | CONST decl_stmnt ';'
   47          | ID_TYPE ID ';'
   48          | IF expr ':' '{' list '}'
   49          | IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | WHILE expr ':' '{' list '}'
   51          | REPEAT '{' list '}' UNTILL expr ':'
   52          | FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | SWITCH '[' expr ']' '{' switch_body '}'
   54          | BREAK ';'
   55          | BREAK error
   56          | assi_stmnt error
   57          | decl_stmnt error
   58          | ID_TYPE ID error
   59          | ID_TYPE error ';'
   60          | IF expr ':' '{' list error
   61          | IF expr ':' error list '}'
   62          | IF expr error '{' list '}'
   63          | IF expr ':' '{' list '}' ELSE '{' list error
   64          | IF expr ':' '{' list '}' ELSE error list '}'
   65          | IF expr ':' '{' list error ELSE '{' list '}'
   66          | IF expr ':' error list '}' ELSE '{' list '}'
   67          | IF expr error '{' list '}' ELSE '{' list '}'
   68          | WHILE expr ':' '{' list error
   69          | WHILE expr ':' error list '}'
   70          | WHILE expr error '{' list '}'
   71          | REPEAT '{' list '}' UNTILL expr error
   72          | REPEAT '{' list '}' error expr ':'
   73          | REPEAT '{' list error UNTILL expr ':'
   74          | REPEAT error list '}' UNTILL expr ':'
   75          | FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | SWITCH '[' expr ']' '{' switch_body error
   82          | SWITCH '[' expr ']' error switch_body '}'
   83          | SWITCH '[' expr error '{' switch_body '}'
   84          | SWITCH error expr ']' '{' switch_body '}'

   85 assi_list: assi_stmnt ',' assi_list
   86          | assi_stmnt assi_list
   87          | %empty

   88 decl_list: ID_TYPE assi_list

   89 switch_body: case_block switch_body
   90            | %empty

   91 case_block: CASE '[' expr ']' list
   92           | DEFAULT list
   93           | CASE '[' expr error list
   94           | CASE error expr ']' list

   95 susp: '=' expr
   96     | '=' expr ';'
   97     | expr ':' '{' list '}'
   98     | expr ':' '{' list '}' ELSE '{' list '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 19 40
'(' (40) 4 25 52 75 76 77 78 79
')' (41) 4 52 75 76 78 79 80
'*' (42) 8 29
'+' (43) 5 26
',' (44) 85
'-' (45) 6 9 27 30
'/' (47) 7 28
':' (58) 48 49 50 51 60 61 63 64 65 66 68 69 72 73 74 97 98
';' (59) 43 44 45 46 47 52 54 59 75 76 77 78 79 80 96
'=' (61) 41 95 96
'[' (91) 53 81 82 83 91 93
']' (93) 53 81 82 84 91 94
'{' (123) 48 49 50 51 52 53 60 62 63 64 65 66 67 68 70 71 72 73 75
    77 78 79 80 81 83 84 97 98
'}' (125) 48 49 50 51 52 53 61 62 63 64 65 66 67 69 70 71 72 74 76
    77 78 79 80 82 83 84 97 98
error (256) 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 55 56 57
    58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 93 94
INT_VAL (258) 21
DOUBLE_VAL (259) 22
BOOL_VAL (260) 20
ID (261) 24 41 47 58
ID_TYPE (262) 42 47 58 59 88
STRING_VAL (263) 23
UNKNOWN (264)
CONST (265) 46
IF (266) 48 49 60 61 62 63 64 65 66 67
ELSE (267) 49 63 64 65 66 67 98
WHILE (268) 50 68 69 70
FOR (269) 52 75 76 77 78 79 80
REPEAT (270) 51 71 72 73 74
UNTILL (271) 51 71 73 74
SWITCH (272) 53 81 82 83 84
CASE (273) 91 93 94
DEFAULT (274) 92
BREAK (275) 54 55
AND (276) 10 31
OR (277) 11 32
XOR (278) 12 33
DECL_STMNT (279)
ASSI_STMNT (280)
DECL_ASSI_STMNT (281)
CONST_DECL_STMNT (282)
EMPTY_STMNT (283)
ASSI_LIST (284)
DECL_LIST (285)
SWBODY (286)
LIST (287)
NOT (288)
"=" (289)
EE (290) 13 34
NE (291) 14 35
LT (292) 15 36
GT (293) 16 37
LE (294) 17 38
GE (295) 18 39
UMINUS (296)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
list (58)
    on left: 1 2 3, on right: 0 1 48 49 50 51 52 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 91 92 93 94 97 98
expr (59)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40, on right: 4
    5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 25 26 27 28 29 31 32 33
    34 35 36 37 38 39 41 48 49 50 51 52 53 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 91 93 94 95
    96 97 98
assi_stmnt (60)
    on left: 41, on right: 42 44 56 85 86
decl_stmnt (61)
    on left: 42, on right: 45 46 57
statement (62)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83 84, on right: 1
assi_list (63)
    on left: 85 86 87, on right: 52 75 76 77 78 79 80 85 86 88
decl_list (64)
    on left: 88, on right: 52 75 76 77 78 79 80
switch_body (65)
    on left: 89 90, on right: 53 81 82 83 84 89
case_block (66)
    on left: 91 92 93 94, on right: 89
susp (67)
    on left: 95 96 97 98, on right: 3


State 0

    0 $accept: . list $end
    1 list: . statement list
    2     | . %empty  [$end]
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 19
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 1

   21 expr: INT_VAL .

    $default  reduce using rule 21 (expr)


State 2

   22 expr: DOUBLE_VAL .

    $default  reduce using rule 22 (expr)


State 3

   20 expr: BOOL_VAL .

    $default  reduce using rule 20 (expr)


State 4

   24 expr: ID .  [AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', '/', '*', ':']
   41 assi_stmnt: ID . '=' expr

    '='  shift, and go to state 25

    $default  reduce using rule 24 (expr)


State 5

   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: ID_TYPE . assi_stmnt
   47 statement: ID_TYPE . ID ';'
   58          | ID_TYPE . ID error
   59          | ID_TYPE . error ';'

    error  shift, and go to state 26
    ID     shift, and go to state 27

    assi_stmnt  go to state 28


State 6

   23 expr: STRING_VAL .

    $default  reduce using rule 23 (expr)


State 7

   42 decl_stmnt: . ID_TYPE assi_stmnt
   46 statement: CONST . decl_stmnt ';'

    ID_TYPE  shift, and go to state 29

    decl_stmnt  go to state 30


State 8

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   48 statement: IF . expr ':' '{' list '}'
   49          | IF . expr ':' '{' list '}' ELSE '{' list '}'
   60          | IF . expr ':' '{' list error
   61          | IF . expr ':' error list '}'
   62          | IF . expr error '{' list '}'
   63          | IF . expr ':' '{' list '}' ELSE '{' list error
   64          | IF . expr ':' '{' list '}' ELSE error list '}'
   65          | IF . expr ':' '{' list error ELSE '{' list '}'
   66          | IF . expr ':' error list '}' ELSE '{' list '}'
   67          | IF . expr error '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 32


State 9

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   50 statement: WHILE . expr ':' '{' list '}'
   68          | WHILE . expr ':' '{' list error
   69          | WHILE . expr ':' error list '}'
   70          | WHILE . expr error '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 33


State 10

   52 statement: FOR . '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   75          | FOR . '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | FOR . '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | FOR . '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | FOR . '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | FOR . '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | FOR . error decl_list ';' expr ';' assi_list ')' '{' list '}'

    error  shift, and go to state 34
    '('    shift, and go to state 35


State 11

   51 statement: REPEAT . '{' list '}' UNTILL expr ':'
   71          | REPEAT . '{' list '}' UNTILL expr error
   72          | REPEAT . '{' list '}' error expr ':'
   73          | REPEAT . '{' list error UNTILL expr ':'
   74          | REPEAT . error list '}' UNTILL expr ':'

    error  shift, and go to state 36
    '{'    shift, and go to state 37


State 12

   53 statement: SWITCH . '[' expr ']' '{' switch_body '}'
   81          | SWITCH . '[' expr ']' '{' switch_body error
   82          | SWITCH . '[' expr ']' error switch_body '}'
   83          | SWITCH . '[' expr error '{' switch_body '}'
   84          | SWITCH . error expr ']' '{' switch_body '}'

    error  shift, and go to state 38
    '['    shift, and go to state 39


State 13

   54 statement: BREAK . ';'
   55          | BREAK . error

    error  shift, and go to state 40
    ';'    shift, and go to state 41


State 14

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
    9     | '-' . expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   30     | '-' . error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 42
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 43


State 15

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   19     | '!' . expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   40     | '!' . error

    error       shift, and go to state 44
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 45


State 16

    4 expr: . '(' expr ')'
    4     | '(' . expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   25     | '(' . expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 46


State 17

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   95 susp: '=' . expr
   96     | '=' . expr ';'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 47


State 18

   43 statement: ';' .

    $default  reduce using rule 43 (statement)


State 19

    0 $accept: list . $end

    $end  shift, and go to state 48


State 20

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   97 susp: expr . ':' '{' list '}'
   98     | expr . ':' '{' list '}' ELSE '{' list '}'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ':'  shift, and go to state 62


State 21

   44 statement: assi_stmnt . ';'
   56          | assi_stmnt . error

    error  shift, and go to state 63
    ';'    shift, and go to state 64


State 22

   45 statement: decl_stmnt . ';'
   57          | decl_stmnt . error

    error  shift, and go to state 65
    ';'    shift, and go to state 66


State 23

    1 list: . statement list
    1     | statement . list
    2     | . %empty  [$end, error, CASE, DEFAULT, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 67
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 24

    3 list: susp .

    $default  reduce using rule 3 (list)


State 25

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: ID '=' . expr

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 68


State 26

   59 statement: ID_TYPE error . ';'

    ';'  shift, and go to state 69


State 27

   41 assi_stmnt: ID . '=' expr
   47 statement: ID_TYPE ID . ';'
   58          | ID_TYPE ID . error

    error  shift, and go to state 70
    '='    shift, and go to state 25
    ';'    shift, and go to state 71


State 28

   42 decl_stmnt: ID_TYPE assi_stmnt .

    $default  reduce using rule 42 (decl_stmnt)


State 29

   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: ID_TYPE . assi_stmnt

    ID  shift, and go to state 72

    assi_stmnt  go to state 28


State 30

   46 statement: CONST decl_stmnt . ';'

    ';'  shift, and go to state 73


State 31

   24 expr: ID .

    $default  reduce using rule 24 (expr)


State 32

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   48 statement: IF expr . ':' '{' list '}'
   49          | IF expr . ':' '{' list '}' ELSE '{' list '}'
   60          | IF expr . ':' '{' list error
   61          | IF expr . ':' error list '}'
   62          | IF expr . error '{' list '}'
   63          | IF expr . ':' '{' list '}' ELSE '{' list error
   64          | IF expr . ':' '{' list '}' ELSE error list '}'
   65          | IF expr . ':' '{' list error ELSE '{' list '}'
   66          | IF expr . ':' error list '}' ELSE '{' list '}'
   67          | IF expr . error '{' list '}' ELSE '{' list '}'

    error  shift, and go to state 74
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ':'    shift, and go to state 75


State 33

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   50 statement: WHILE expr . ':' '{' list '}'
   68          | WHILE expr . ':' '{' list error
   69          | WHILE expr . ':' error list '}'
   70          | WHILE expr . error '{' list '}'

    error  shift, and go to state 76
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ':'    shift, and go to state 77


State 34

   80 statement: FOR error . decl_list ';' expr ';' assi_list ')' '{' list '}'
   88 decl_list: . ID_TYPE assi_list

    ID_TYPE  shift, and go to state 78

    decl_list  go to state 79


State 35

   52 statement: FOR '(' . decl_list ';' expr ';' assi_list ')' '{' list '}'
   75          | FOR '(' . decl_list ';' expr ';' assi_list ')' '{' list error
   76          | FOR '(' . decl_list ';' expr ';' assi_list ')' error list '}'
   77          | FOR '(' . decl_list ';' expr ';' assi_list error '{' list '}'
   78          | FOR '(' . decl_list ';' expr error assi_list ')' '{' list '}'
   79          | FOR '(' . decl_list error expr ';' assi_list ')' '{' list '}'
   88 decl_list: . ID_TYPE assi_list

    ID_TYPE  shift, and go to state 78

    decl_list  go to state 80


State 36

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   74          | REPEAT error . list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 81
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 37

    1 list: . statement list
    2     | . %empty  [error, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   51          | REPEAT '{' . list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   71          | REPEAT '{' . list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   72          | REPEAT '{' . list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   73          | REPEAT '{' . list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 82
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 38

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   84 statement: SWITCH error . expr ']' '{' switch_body '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 83


State 39

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   53 statement: SWITCH '[' . expr ']' '{' switch_body '}'
   81          | SWITCH '[' . expr ']' '{' switch_body error
   82          | SWITCH '[' . expr ']' error switch_body '}'
   83          | SWITCH '[' . expr error '{' switch_body '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 84


State 40

   55 statement: BREAK error .

    $default  reduce using rule 55 (statement)


State 41

   54 statement: BREAK ';' .

    $default  reduce using rule 54 (statement)


State 42

   30 expr: '-' error .

    $default  reduce using rule 30 (expr)


State 43

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
    9     | '-' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', '/', '*', ')', ';', ':', '}', ']', ',']
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    $default  reduce using rule 9 (expr)

    Conflict between rule 9 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 9 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 9 and token XOR resolved as reduce (XOR < UMINUS).
    Conflict between rule 9 and token EE resolved as reduce (EE < UMINUS).
    Conflict between rule 9 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 9 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 9 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 9 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 9 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 9 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 9 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 9 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 9 and token '*' resolved as reduce ('*' < UMINUS).


State 44

   40 expr: '!' error .

    $default  reduce using rule 40 (expr)


State 45

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   19     | '!' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', '/', '*', ')', ';', ':', '}', ']', ',']
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    $default  reduce using rule 19 (expr)

    Conflict between rule 19 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 19 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 19 and token XOR resolved as reduce (XOR < UMINUS).
    Conflict between rule 19 and token EE resolved as reduce (EE < UMINUS).
    Conflict between rule 19 and token NE resolved as reduce (NE < UMINUS).
    Conflict between rule 19 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 19 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 19 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 19 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 19 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 19 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 19 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 19 and token '*' resolved as reduce ('*' < UMINUS).


State 46

    4 expr: '(' expr . ')'
    5     | expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   25     | '(' expr . error
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    error  shift, and go to state 85
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ')'    shift, and go to state 86


State 47

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   95 susp: '=' expr .  [$end, error, CASE, DEFAULT, '}']
   96     | '=' expr . ';'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ';'  shift, and go to state 87

    $default  reduce using rule 95 (susp)


State 48

    0 $accept: list $end .

    $default  accept


State 49

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   10     | expr AND . expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   31     | expr AND . error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 88
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 89


State 50

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   11     | expr OR . expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   32     | expr OR . error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 90
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 91


State 51

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   12     | expr XOR . expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   33     | expr XOR . error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 92
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 93


State 52

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   13     | expr EE . expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   34     | expr EE . error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 94
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 95


State 53

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   14     | expr NE . expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   35     | expr NE . error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 96
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 97


State 54

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   15     | expr LT . expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   36     | expr LT . error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 98
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 99


State 55

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   16     | expr GT . expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   37     | expr GT . error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 100
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 101


State 56

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   17     | expr LE . expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   38     | expr LE . error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 102
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 103


State 57

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   18     | expr GE . expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   39     | expr GE . error
   40     | . '!' error

    error       shift, and go to state 104
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 105


State 58

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    5     | expr '+' . expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   26     | expr '+' . error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 106
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 107


State 59

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    6     | expr '-' . expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   27     | expr '-' . error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 108
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 109


State 60

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    7     | expr '/' . expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   28     | expr '/' . error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 110
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 111


State 61

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    8     | expr '*' . expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   29     | expr '*' . error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error

    error       shift, and go to state 112
    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 113


State 62

   97 susp: expr ':' . '{' list '}'
   98     | expr ':' . '{' list '}' ELSE '{' list '}'

    '{'  shift, and go to state 114


State 63

   56 statement: assi_stmnt error .

    $default  reduce using rule 56 (statement)


State 64

   44 statement: assi_stmnt ';' .

    $default  reduce using rule 44 (statement)


State 65

   57 statement: decl_stmnt error .

    $default  reduce using rule 57 (statement)


State 66

   45 statement: decl_stmnt ';' .

    $default  reduce using rule 45 (statement)


State 67

    1 list: statement list .

    $default  reduce using rule 1 (list)


State 68

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   41 assi_stmnt: ID '=' expr .  [error, ID, ')', ';', ',']

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 41 (assi_stmnt)


State 69

   59 statement: ID_TYPE error ';' .

    $default  reduce using rule 59 (statement)


State 70

   58 statement: ID_TYPE ID error .

    $default  reduce using rule 58 (statement)


State 71

   47 statement: ID_TYPE ID ';' .

    $default  reduce using rule 47 (statement)


State 72

   41 assi_stmnt: ID . '=' expr

    '='  shift, and go to state 25


State 73

   46 statement: CONST decl_stmnt ';' .

    $default  reduce using rule 46 (statement)


State 74

   62 statement: IF expr error . '{' list '}'
   67          | IF expr error . '{' list '}' ELSE '{' list '}'

    '{'  shift, and go to state 115


State 75

   48 statement: IF expr ':' . '{' list '}'
   49          | IF expr ':' . '{' list '}' ELSE '{' list '}'
   60          | IF expr ':' . '{' list error
   61          | IF expr ':' . error list '}'
   63          | IF expr ':' . '{' list '}' ELSE '{' list error
   64          | IF expr ':' . '{' list '}' ELSE error list '}'
   65          | IF expr ':' . '{' list error ELSE '{' list '}'
   66          | IF expr ':' . error list '}' ELSE '{' list '}'

    error  shift, and go to state 116
    '{'    shift, and go to state 117


State 76

   70 statement: WHILE expr error . '{' list '}'

    '{'  shift, and go to state 118


State 77

   50 statement: WHILE expr ':' . '{' list '}'
   68          | WHILE expr ':' . '{' list error
   69          | WHILE expr ':' . error list '}'

    error  shift, and go to state 119
    '{'    shift, and go to state 120


State 78

   41 assi_stmnt: . ID '=' expr
   85 assi_list: . assi_stmnt ',' assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [error, ';']
   88 decl_list: ID_TYPE . assi_list

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 122


State 79

   80 statement: FOR error decl_list . ';' expr ';' assi_list ')' '{' list '}'

    ';'  shift, and go to state 123


State 80

   52 statement: FOR '(' decl_list . ';' expr ';' assi_list ')' '{' list '}'
   75          | FOR '(' decl_list . ';' expr ';' assi_list ')' '{' list error
   76          | FOR '(' decl_list . ';' expr ';' assi_list ')' error list '}'
   77          | FOR '(' decl_list . ';' expr ';' assi_list error '{' list '}'
   78          | FOR '(' decl_list . ';' expr error assi_list ')' '{' list '}'
   79          | FOR '(' decl_list . error expr ';' assi_list ')' '{' list '}'

    error  shift, and go to state 124
    ';'    shift, and go to state 125


State 81

   74 statement: REPEAT error list . '}' UNTILL expr ':'

    '}'  shift, and go to state 126


State 82

   51 statement: REPEAT '{' list . '}' UNTILL expr ':'
   71          | REPEAT '{' list . '}' UNTILL expr error
   72          | REPEAT '{' list . '}' error expr ':'
   73          | REPEAT '{' list . error UNTILL expr ':'

    error  shift, and go to state 127
    '}'    shift, and go to state 128


State 83

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   84 statement: SWITCH error expr . ']' '{' switch_body '}'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ']'  shift, and go to state 129


State 84

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   53 statement: SWITCH '[' expr . ']' '{' switch_body '}'
   81          | SWITCH '[' expr . ']' '{' switch_body error
   82          | SWITCH '[' expr . ']' error switch_body '}'
   83          | SWITCH '[' expr . error '{' switch_body '}'

    error  shift, and go to state 130
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ']'    shift, and go to state 131


State 85

   25 expr: '(' expr error .

    $default  reduce using rule 25 (expr)


State 86

    4 expr: '(' expr ')' .

    $default  reduce using rule 4 (expr)


State 87

   96 susp: '=' expr ';' .

    $default  reduce using rule 96 (susp)


State 88

   31 expr: expr AND error .

    $default  reduce using rule 31 (expr)


State 89

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   10     | expr AND expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, ')', ';', ':', '}', ']', ',']
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 10 (expr)

    Conflict between rule 10 and token AND resolved as reduce (%left AND).
    Conflict between rule 10 and token OR resolved as reduce (OR < AND).
    Conflict between rule 10 and token XOR resolved as shift (AND < XOR).
    Conflict between rule 10 and token EE resolved as shift (AND < EE).
    Conflict between rule 10 and token NE resolved as shift (AND < NE).
    Conflict between rule 10 and token LT resolved as shift (AND < LT).
    Conflict between rule 10 and token GT resolved as shift (AND < GT).
    Conflict between rule 10 and token LE resolved as shift (AND < LE).
    Conflict between rule 10 and token GE resolved as shift (AND < GE).
    Conflict between rule 10 and token '+' resolved as shift (AND < '+').
    Conflict between rule 10 and token '-' resolved as shift (AND < '-').
    Conflict between rule 10 and token '/' resolved as shift (AND < '/').
    Conflict between rule 10 and token '*' resolved as shift (AND < '*').


State 90

   32 expr: expr OR error .

    $default  reduce using rule 32 (expr)


State 91

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   11     | expr OR expr .  [$end, error, ID, CASE, DEFAULT, OR, ')', ';', ':', '}', ']', ',']
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    AND  shift, and go to state 49
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 11 (expr)

    Conflict between rule 11 and token AND resolved as shift (OR < AND).
    Conflict between rule 11 and token OR resolved as reduce (%left OR).
    Conflict between rule 11 and token XOR resolved as shift (OR < XOR).
    Conflict between rule 11 and token EE resolved as shift (OR < EE).
    Conflict between rule 11 and token NE resolved as shift (OR < NE).
    Conflict between rule 11 and token LT resolved as shift (OR < LT).
    Conflict between rule 11 and token GT resolved as shift (OR < GT).
    Conflict between rule 11 and token LE resolved as shift (OR < LE).
    Conflict between rule 11 and token GE resolved as shift (OR < GE).
    Conflict between rule 11 and token '+' resolved as shift (OR < '+').
    Conflict between rule 11 and token '-' resolved as shift (OR < '-').
    Conflict between rule 11 and token '/' resolved as shift (OR < '/').
    Conflict between rule 11 and token '*' resolved as shift (OR < '*').


State 92

   33 expr: expr XOR error .

    $default  reduce using rule 33 (expr)


State 93

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   12     | expr XOR expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, ')', ';', ':', '}', ']', ',']
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 12 (expr)

    Conflict between rule 12 and token AND resolved as reduce (AND < XOR).
    Conflict between rule 12 and token OR resolved as reduce (OR < XOR).
    Conflict between rule 12 and token XOR resolved as reduce (%left XOR).
    Conflict between rule 12 and token EE resolved as shift (XOR < EE).
    Conflict between rule 12 and token NE resolved as shift (XOR < NE).
    Conflict between rule 12 and token LT resolved as shift (XOR < LT).
    Conflict between rule 12 and token GT resolved as shift (XOR < GT).
    Conflict between rule 12 and token LE resolved as shift (XOR < LE).
    Conflict between rule 12 and token GE resolved as shift (XOR < GE).
    Conflict between rule 12 and token '+' resolved as shift (XOR < '+').
    Conflict between rule 12 and token '-' resolved as shift (XOR < '-').
    Conflict between rule 12 and token '/' resolved as shift (XOR < '/').
    Conflict between rule 12 and token '*' resolved as shift (XOR < '*').


State 94

   34 expr: expr EE error .

    $default  reduce using rule 34 (expr)


State 95

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   13     | expr EE expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, ')', ';', ':', '}', ']', ',']
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 13 (expr)

    Conflict between rule 13 and token AND resolved as reduce (AND < EE).
    Conflict between rule 13 and token OR resolved as reduce (OR < EE).
    Conflict between rule 13 and token XOR resolved as reduce (XOR < EE).
    Conflict between rule 13 and token EE resolved as reduce (%left EE).
    Conflict between rule 13 and token NE resolved as reduce (%left NE).
    Conflict between rule 13 and token LT resolved as shift (EE < LT).
    Conflict between rule 13 and token GT resolved as shift (EE < GT).
    Conflict between rule 13 and token LE resolved as shift (EE < LE).
    Conflict between rule 13 and token GE resolved as shift (EE < GE).
    Conflict between rule 13 and token '+' resolved as shift (EE < '+').
    Conflict between rule 13 and token '-' resolved as shift (EE < '-').
    Conflict between rule 13 and token '/' resolved as shift (EE < '/').
    Conflict between rule 13 and token '*' resolved as shift (EE < '*').


State 96

   35 expr: expr NE error .

    $default  reduce using rule 35 (expr)


State 97

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   14     | expr NE expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, ')', ';', ':', '}', ']', ',']
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 14 (expr)

    Conflict between rule 14 and token AND resolved as reduce (AND < NE).
    Conflict between rule 14 and token OR resolved as reduce (OR < NE).
    Conflict between rule 14 and token XOR resolved as reduce (XOR < NE).
    Conflict between rule 14 and token EE resolved as reduce (%left EE).
    Conflict between rule 14 and token NE resolved as reduce (%left NE).
    Conflict between rule 14 and token LT resolved as shift (NE < LT).
    Conflict between rule 14 and token GT resolved as shift (NE < GT).
    Conflict between rule 14 and token LE resolved as shift (NE < LE).
    Conflict between rule 14 and token GE resolved as shift (NE < GE).
    Conflict between rule 14 and token '+' resolved as shift (NE < '+').
    Conflict between rule 14 and token '-' resolved as shift (NE < '-').
    Conflict between rule 14 and token '/' resolved as shift (NE < '/').
    Conflict between rule 14 and token '*' resolved as shift (NE < '*').


State 98

   36 expr: expr LT error .

    $default  reduce using rule 36 (expr)


State 99

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   15     | expr LT expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, ')', ';', ':', '}', ']', ',']
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 15 (expr)

    Conflict between rule 15 and token AND resolved as reduce (AND < LT).
    Conflict between rule 15 and token OR resolved as reduce (OR < LT).
    Conflict between rule 15 and token XOR resolved as reduce (XOR < LT).
    Conflict between rule 15 and token EE resolved as reduce (EE < LT).
    Conflict between rule 15 and token NE resolved as reduce (NE < LT).
    Conflict between rule 15 and token LT resolved as reduce (%left LT).
    Conflict between rule 15 and token GT resolved as reduce (%left GT).
    Conflict between rule 15 and token LE resolved as reduce (%left LE).
    Conflict between rule 15 and token GE resolved as reduce (%left GE).
    Conflict between rule 15 and token '+' resolved as shift (LT < '+').
    Conflict between rule 15 and token '-' resolved as shift (LT < '-').
    Conflict between rule 15 and token '/' resolved as shift (LT < '/').
    Conflict between rule 15 and token '*' resolved as shift (LT < '*').


State 100

   37 expr: expr GT error .

    $default  reduce using rule 37 (expr)


State 101

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   16     | expr GT expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, ')', ';', ':', '}', ']', ',']
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 16 (expr)

    Conflict between rule 16 and token AND resolved as reduce (AND < GT).
    Conflict between rule 16 and token OR resolved as reduce (OR < GT).
    Conflict between rule 16 and token XOR resolved as reduce (XOR < GT).
    Conflict between rule 16 and token EE resolved as reduce (EE < GT).
    Conflict between rule 16 and token NE resolved as reduce (NE < GT).
    Conflict between rule 16 and token LT resolved as reduce (%left LT).
    Conflict between rule 16 and token GT resolved as reduce (%left GT).
    Conflict between rule 16 and token LE resolved as reduce (%left LE).
    Conflict between rule 16 and token GE resolved as reduce (%left GE).
    Conflict between rule 16 and token '+' resolved as shift (GT < '+').
    Conflict between rule 16 and token '-' resolved as shift (GT < '-').
    Conflict between rule 16 and token '/' resolved as shift (GT < '/').
    Conflict between rule 16 and token '*' resolved as shift (GT < '*').


State 102

   38 expr: expr LE error .

    $default  reduce using rule 38 (expr)


State 103

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   17     | expr LE expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, ')', ';', ':', '}', ']', ',']
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 17 (expr)

    Conflict between rule 17 and token AND resolved as reduce (AND < LE).
    Conflict between rule 17 and token OR resolved as reduce (OR < LE).
    Conflict between rule 17 and token XOR resolved as reduce (XOR < LE).
    Conflict between rule 17 and token EE resolved as reduce (EE < LE).
    Conflict between rule 17 and token NE resolved as reduce (NE < LE).
    Conflict between rule 17 and token LT resolved as reduce (%left LT).
    Conflict between rule 17 and token GT resolved as reduce (%left GT).
    Conflict between rule 17 and token LE resolved as reduce (%left LE).
    Conflict between rule 17 and token GE resolved as reduce (%left GE).
    Conflict between rule 17 and token '+' resolved as shift (LE < '+').
    Conflict between rule 17 and token '-' resolved as shift (LE < '-').
    Conflict between rule 17 and token '/' resolved as shift (LE < '/').
    Conflict between rule 17 and token '*' resolved as shift (LE < '*').


State 104

   39 expr: expr GE error .

    $default  reduce using rule 39 (expr)


State 105

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   18     | expr GE expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, ')', ';', ':', '}', ']', ',']
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 18 (expr)

    Conflict between rule 18 and token AND resolved as reduce (AND < GE).
    Conflict between rule 18 and token OR resolved as reduce (OR < GE).
    Conflict between rule 18 and token XOR resolved as reduce (XOR < GE).
    Conflict between rule 18 and token EE resolved as reduce (EE < GE).
    Conflict between rule 18 and token NE resolved as reduce (NE < GE).
    Conflict between rule 18 and token LT resolved as reduce (%left LT).
    Conflict between rule 18 and token GT resolved as reduce (%left GT).
    Conflict between rule 18 and token LE resolved as reduce (%left LE).
    Conflict between rule 18 and token GE resolved as reduce (%left GE).
    Conflict between rule 18 and token '+' resolved as shift (GE < '+').
    Conflict between rule 18 and token '-' resolved as shift (GE < '-').
    Conflict between rule 18 and token '/' resolved as shift (GE < '/').
    Conflict between rule 18 and token '*' resolved as shift (GE < '*').


State 106

   26 expr: expr '+' error .

    $default  reduce using rule 26 (expr)


State 107

    5 expr: expr . '+' expr
    5     | expr '+' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', ')', ';', ':', '}', ']', ',']
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 5 (expr)

    Conflict between rule 5 and token AND resolved as reduce (AND < '+').
    Conflict between rule 5 and token OR resolved as reduce (OR < '+').
    Conflict between rule 5 and token XOR resolved as reduce (XOR < '+').
    Conflict between rule 5 and token EE resolved as reduce (EE < '+').
    Conflict between rule 5 and token NE resolved as reduce (NE < '+').
    Conflict between rule 5 and token LT resolved as reduce (LT < '+').
    Conflict between rule 5 and token GT resolved as reduce (GT < '+').
    Conflict between rule 5 and token LE resolved as reduce (LE < '+').
    Conflict between rule 5 and token GE resolved as reduce (GE < '+').
    Conflict between rule 5 and token '+' resolved as reduce (%left '+').
    Conflict between rule 5 and token '-' resolved as reduce (%left '-').
    Conflict between rule 5 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 5 and token '*' resolved as shift ('+' < '*').


State 108

   27 expr: expr '-' error .

    $default  reduce using rule 27 (expr)


State 109

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    6     | expr '-' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', ')', ';', ':', '}', ']', ',']
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    '/'  shift, and go to state 60
    '*'  shift, and go to state 61

    $default  reduce using rule 6 (expr)

    Conflict between rule 6 and token AND resolved as reduce (AND < '-').
    Conflict between rule 6 and token OR resolved as reduce (OR < '-').
    Conflict between rule 6 and token XOR resolved as reduce (XOR < '-').
    Conflict between rule 6 and token EE resolved as reduce (EE < '-').
    Conflict between rule 6 and token NE resolved as reduce (NE < '-').
    Conflict between rule 6 and token LT resolved as reduce (LT < '-').
    Conflict between rule 6 and token GT resolved as reduce (GT < '-').
    Conflict between rule 6 and token LE resolved as reduce (LE < '-').
    Conflict between rule 6 and token GE resolved as reduce (GE < '-').
    Conflict between rule 6 and token '+' resolved as reduce (%left '+').
    Conflict between rule 6 and token '-' resolved as reduce (%left '-').
    Conflict between rule 6 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 6 and token '*' resolved as shift ('-' < '*').


State 110

   28 expr: expr '/' error .

    $default  reduce using rule 28 (expr)


State 111

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    7     | expr '/' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', '/', '*', ')', ';', ':', '}', ']', ',']
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    $default  reduce using rule 7 (expr)

    Conflict between rule 7 and token AND resolved as reduce (AND < '/').
    Conflict between rule 7 and token OR resolved as reduce (OR < '/').
    Conflict between rule 7 and token XOR resolved as reduce (XOR < '/').
    Conflict between rule 7 and token EE resolved as reduce (EE < '/').
    Conflict between rule 7 and token NE resolved as reduce (NE < '/').
    Conflict between rule 7 and token LT resolved as reduce (LT < '/').
    Conflict between rule 7 and token GT resolved as reduce (GT < '/').
    Conflict between rule 7 and token LE resolved as reduce (LE < '/').
    Conflict between rule 7 and token GE resolved as reduce (GE < '/').
    Conflict between rule 7 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 7 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 7 and token '/' resolved as reduce (%left '/').
    Conflict between rule 7 and token '*' resolved as reduce (%left '*').


State 112

   29 expr: expr '*' error .

    $default  reduce using rule 29 (expr)


State 113

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
    8     | expr '*' expr .  [$end, error, ID, CASE, DEFAULT, AND, OR, XOR, EE, NE, LT, GT, LE, GE, '+', '-', '/', '*', ')', ';', ':', '}', ']', ',']
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error

    $default  reduce using rule 8 (expr)

    Conflict between rule 8 and token AND resolved as reduce (AND < '*').
    Conflict between rule 8 and token OR resolved as reduce (OR < '*').
    Conflict between rule 8 and token XOR resolved as reduce (XOR < '*').
    Conflict between rule 8 and token EE resolved as reduce (EE < '*').
    Conflict between rule 8 and token NE resolved as reduce (NE < '*').
    Conflict between rule 8 and token LT resolved as reduce (LT < '*').
    Conflict between rule 8 and token GT resolved as reduce (GT < '*').
    Conflict between rule 8 and token LE resolved as reduce (LE < '*').
    Conflict between rule 8 and token GE resolved as reduce (GE < '*').
    Conflict between rule 8 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 8 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 8 and token '/' resolved as reduce (%left '/').
    Conflict between rule 8 and token '*' resolved as reduce (%left '*').


State 114

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   97     | expr ':' '{' . list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'
   98     | expr ':' '{' . list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 132
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 115

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   62          | IF expr error '{' . list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   67          | IF expr error '{' . list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 133
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 116

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   61          | IF expr ':' error . list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   66          | IF expr ':' error . list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 134
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 117

    1 list: . statement list
    2     | . %empty  [error, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   48          | IF expr ':' '{' . list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   49          | IF expr ':' '{' . list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   60          | IF expr ':' '{' . list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   63          | IF expr ':' '{' . list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   64          | IF expr ':' '{' . list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   65          | IF expr ':' '{' . list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 135
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 118

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   70          | WHILE expr error '{' . list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 136
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 119

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   69          | WHILE expr ':' error . list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 137
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 120

    1 list: . statement list
    2     | . %empty  [error, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   50          | WHILE expr ':' '{' . list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   68          | WHILE expr ':' '{' . list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 138
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 121

   41 assi_stmnt: . ID '=' expr
   85 assi_list: . assi_stmnt ',' assi_list
   85          | assi_stmnt . ',' assi_list
   86          | . assi_stmnt assi_list
   86          | assi_stmnt . assi_list
   87          | . %empty  [error, ')', ';']

    ID   shift, and go to state 72
    ','  shift, and go to state 139

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 140


State 122

   88 decl_list: ID_TYPE assi_list .

    $default  reduce using rule 88 (decl_list)


State 123

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   80 statement: FOR error decl_list ';' . expr ';' assi_list ')' '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 141


State 124

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   79 statement: FOR '(' decl_list error . expr ';' assi_list ')' '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 142


State 125

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   52 statement: FOR '(' decl_list ';' . expr ';' assi_list ')' '{' list '}'
   75          | FOR '(' decl_list ';' . expr ';' assi_list ')' '{' list error
   76          | FOR '(' decl_list ';' . expr ';' assi_list ')' error list '}'
   77          | FOR '(' decl_list ';' . expr ';' assi_list error '{' list '}'
   78          | FOR '(' decl_list ';' . expr error assi_list ')' '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 143


State 126

   74 statement: REPEAT error list '}' . UNTILL expr ':'

    UNTILL  shift, and go to state 144


State 127

   73 statement: REPEAT '{' list error . UNTILL expr ':'

    UNTILL  shift, and go to state 145


State 128

   51 statement: REPEAT '{' list '}' . UNTILL expr ':'
   71          | REPEAT '{' list '}' . UNTILL expr error
   72          | REPEAT '{' list '}' . error expr ':'

    error   shift, and go to state 146
    UNTILL  shift, and go to state 147


State 129

   84 statement: SWITCH error expr ']' . '{' switch_body '}'

    '{'  shift, and go to state 148


State 130

   83 statement: SWITCH '[' expr error . '{' switch_body '}'

    '{'  shift, and go to state 149


State 131

   53 statement: SWITCH '[' expr ']' . '{' switch_body '}'
   81          | SWITCH '[' expr ']' . '{' switch_body error
   82          | SWITCH '[' expr ']' . error switch_body '}'

    error  shift, and go to state 150
    '{'    shift, and go to state 151


State 132

   97 susp: expr ':' '{' list . '}'
   98     | expr ':' '{' list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 152


State 133

   62 statement: IF expr error '{' list . '}'
   67          | IF expr error '{' list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 153


State 134

   61 statement: IF expr ':' error list . '}'
   66          | IF expr ':' error list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 154


State 135

   48 statement: IF expr ':' '{' list . '}'
   49          | IF expr ':' '{' list . '}' ELSE '{' list '}'
   60          | IF expr ':' '{' list . error
   63          | IF expr ':' '{' list . '}' ELSE '{' list error
   64          | IF expr ':' '{' list . '}' ELSE error list '}'
   65          | IF expr ':' '{' list . error ELSE '{' list '}'

    error  shift, and go to state 155
    '}'    shift, and go to state 156


State 136

   70 statement: WHILE expr error '{' list . '}'

    '}'  shift, and go to state 157


State 137

   69 statement: WHILE expr ':' error list . '}'

    '}'  shift, and go to state 158


State 138

   50 statement: WHILE expr ':' '{' list . '}'
   68          | WHILE expr ':' '{' list . error

    error  shift, and go to state 159
    '}'    shift, and go to state 160


State 139

   41 assi_stmnt: . ID '=' expr
   85 assi_list: . assi_stmnt ',' assi_list
   85          | assi_stmnt ',' . assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [error, ')', ';']

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 161


State 140

   86 assi_list: assi_stmnt assi_list .

    $default  reduce using rule 86 (assi_list)


State 141

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   80 statement: FOR error decl_list ';' expr . ';' assi_list ')' '{' list '}'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ';'  shift, and go to state 162


State 142

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   79 statement: FOR '(' decl_list error expr . ';' assi_list ')' '{' list '}'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ';'  shift, and go to state 163


State 143

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   52 statement: FOR '(' decl_list ';' expr . ';' assi_list ')' '{' list '}'
   75          | FOR '(' decl_list ';' expr . ';' assi_list ')' '{' list error
   76          | FOR '(' decl_list ';' expr . ';' assi_list ')' error list '}'
   77          | FOR '(' decl_list ';' expr . ';' assi_list error '{' list '}'
   78          | FOR '(' decl_list ';' expr . error assi_list ')' '{' list '}'

    error  shift, and go to state 164
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ';'    shift, and go to state 165


State 144

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   74 statement: REPEAT error list '}' UNTILL . expr ':'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 166


State 145

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   73 statement: REPEAT '{' list error UNTILL . expr ':'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 167


State 146

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   72 statement: REPEAT '{' list '}' error . expr ':'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 168


State 147

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   51 statement: REPEAT '{' list '}' UNTILL . expr ':'
   71          | REPEAT '{' list '}' UNTILL . expr error

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 169


State 148

   84 statement: SWITCH error expr ']' '{' . switch_body '}'
   89 switch_body: . case_block switch_body
   90            | . %empty  ['}']
   91 case_block: . CASE '[' expr ']' list
   92           | . DEFAULT list
   93           | . CASE '[' expr error list
   94           | . CASE error expr ']' list

    CASE     shift, and go to state 170
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 90 (switch_body)

    switch_body  go to state 172
    case_block   go to state 173


State 149

   83 statement: SWITCH '[' expr error '{' . switch_body '}'
   89 switch_body: . case_block switch_body
   90            | . %empty  ['}']
   91 case_block: . CASE '[' expr ']' list
   92           | . DEFAULT list
   93           | . CASE '[' expr error list
   94           | . CASE error expr ']' list

    CASE     shift, and go to state 170
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 90 (switch_body)

    switch_body  go to state 174
    case_block   go to state 173


State 150

   82 statement: SWITCH '[' expr ']' error . switch_body '}'
   89 switch_body: . case_block switch_body
   90            | . %empty  ['}']
   91 case_block: . CASE '[' expr ']' list
   92           | . DEFAULT list
   93           | . CASE '[' expr error list
   94           | . CASE error expr ']' list

    CASE     shift, and go to state 170
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 90 (switch_body)

    switch_body  go to state 175
    case_block   go to state 173


State 151

   53 statement: SWITCH '[' expr ']' '{' . switch_body '}'
   81          | SWITCH '[' expr ']' '{' . switch_body error
   89 switch_body: . case_block switch_body
   90            | . %empty  [error, '}']
   91 case_block: . CASE '[' expr ']' list
   92           | . DEFAULT list
   93           | . CASE '[' expr error list
   94           | . CASE error expr ']' list

    CASE     shift, and go to state 170
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 90 (switch_body)

    switch_body  go to state 176
    case_block   go to state 173


State 152

   97 susp: expr ':' '{' list '}' .  [$end, error, CASE, DEFAULT, '}']
   98     | expr ':' '{' list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 177

    $default  reduce using rule 97 (susp)


State 153

   62 statement: IF expr error '{' list '}' .  [$end, error, INT_VAL, DOUBLE_VAL, BOOL_VAL, ID, ID_TYPE, STRING_VAL, CONST, IF, WHILE, FOR, REPEAT, SWITCH, CASE, DEFAULT, BREAK, '-', '!', '(', '=', ';', '}']
   67          | IF expr error '{' list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 178

    $default  reduce using rule 62 (statement)


State 154

   61 statement: IF expr ':' error list '}' .  [$end, error, INT_VAL, DOUBLE_VAL, BOOL_VAL, ID, ID_TYPE, STRING_VAL, CONST, IF, WHILE, FOR, REPEAT, SWITCH, CASE, DEFAULT, BREAK, '-', '!', '(', '=', ';', '}']
   66          | IF expr ':' error list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 179

    $default  reduce using rule 61 (statement)


State 155

   60 statement: IF expr ':' '{' list error .  [$end, error, INT_VAL, DOUBLE_VAL, BOOL_VAL, ID, ID_TYPE, STRING_VAL, CONST, IF, WHILE, FOR, REPEAT, SWITCH, CASE, DEFAULT, BREAK, '-', '!', '(', '=', ';', '}']
   65          | IF expr ':' '{' list error . ELSE '{' list '}'

    ELSE  shift, and go to state 180

    $default  reduce using rule 60 (statement)


State 156

   48 statement: IF expr ':' '{' list '}' .  [$end, error, INT_VAL, DOUBLE_VAL, BOOL_VAL, ID, ID_TYPE, STRING_VAL, CONST, IF, WHILE, FOR, REPEAT, SWITCH, CASE, DEFAULT, BREAK, '-', '!', '(', '=', ';', '}']
   49          | IF expr ':' '{' list '}' . ELSE '{' list '}'
   63          | IF expr ':' '{' list '}' . ELSE '{' list error
   64          | IF expr ':' '{' list '}' . ELSE error list '}'

    ELSE  shift, and go to state 181

    $default  reduce using rule 48 (statement)


State 157

   70 statement: WHILE expr error '{' list '}' .

    $default  reduce using rule 70 (statement)


State 158

   69 statement: WHILE expr ':' error list '}' .

    $default  reduce using rule 69 (statement)


State 159

   68 statement: WHILE expr ':' '{' list error .

    $default  reduce using rule 68 (statement)


State 160

   50 statement: WHILE expr ':' '{' list '}' .

    $default  reduce using rule 50 (statement)


State 161

   85 assi_list: assi_stmnt ',' assi_list .

    $default  reduce using rule 85 (assi_list)


State 162

   41 assi_stmnt: . ID '=' expr
   80 statement: FOR error decl_list ';' expr ';' . assi_list ')' '{' list '}'
   85 assi_list: . assi_stmnt ',' assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [')']

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 182


State 163

   41 assi_stmnt: . ID '=' expr
   79 statement: FOR '(' decl_list error expr ';' . assi_list ')' '{' list '}'
   85 assi_list: . assi_stmnt ',' assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [')']

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 183


State 164

   41 assi_stmnt: . ID '=' expr
   78 statement: FOR '(' decl_list ';' expr error . assi_list ')' '{' list '}'
   85 assi_list: . assi_stmnt ',' assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [')']

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 184


State 165

   41 assi_stmnt: . ID '=' expr
   52 statement: FOR '(' decl_list ';' expr ';' . assi_list ')' '{' list '}'
   75          | FOR '(' decl_list ';' expr ';' . assi_list ')' '{' list error
   76          | FOR '(' decl_list ';' expr ';' . assi_list ')' error list '}'
   77          | FOR '(' decl_list ';' expr ';' . assi_list error '{' list '}'
   85 assi_list: . assi_stmnt ',' assi_list
   86          | . assi_stmnt assi_list
   87          | . %empty  [error, ')']

    ID  shift, and go to state 72

    $default  reduce using rule 87 (assi_list)

    assi_stmnt  go to state 121
    assi_list   go to state 185


State 166

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   74 statement: REPEAT error list '}' UNTILL expr . ':'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ':'  shift, and go to state 186


State 167

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   73 statement: REPEAT '{' list error UNTILL expr . ':'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ':'  shift, and go to state 187


State 168

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   72 statement: REPEAT '{' list '}' error expr . ':'

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ':'  shift, and go to state 188


State 169

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   51 statement: REPEAT '{' list '}' UNTILL expr . ':'
   71          | REPEAT '{' list '}' UNTILL expr . error

    error  shift, and go to state 189
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ':'    shift, and go to state 190


State 170

   91 case_block: CASE . '[' expr ']' list
   93           | CASE . '[' expr error list
   94           | CASE . error expr ']' list

    error  shift, and go to state 191
    '['    shift, and go to state 192


State 171

    1 list: . statement list
    2     | . %empty  [error, CASE, DEFAULT, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   92 case_block: DEFAULT . list
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 193
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 172

   84 statement: SWITCH error expr ']' '{' switch_body . '}'

    '}'  shift, and go to state 194


State 173

   89 switch_body: . case_block switch_body
   89            | case_block . switch_body
   90            | . %empty  [error, '}']
   91 case_block: . CASE '[' expr ']' list
   92           | . DEFAULT list
   93           | . CASE '[' expr error list
   94           | . CASE error expr ']' list

    CASE     shift, and go to state 170
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 90 (switch_body)

    switch_body  go to state 195
    case_block   go to state 173


State 174

   83 statement: SWITCH '[' expr error '{' switch_body . '}'

    '}'  shift, and go to state 196


State 175

   82 statement: SWITCH '[' expr ']' error switch_body . '}'

    '}'  shift, and go to state 197


State 176

   53 statement: SWITCH '[' expr ']' '{' switch_body . '}'
   81          | SWITCH '[' expr ']' '{' switch_body . error

    error  shift, and go to state 198
    '}'    shift, and go to state 199


State 177

   98 susp: expr ':' '{' list '}' ELSE . '{' list '}'

    '{'  shift, and go to state 200


State 178

   67 statement: IF expr error '{' list '}' ELSE . '{' list '}'

    '{'  shift, and go to state 201


State 179

   66 statement: IF expr ':' error list '}' ELSE . '{' list '}'

    '{'  shift, and go to state 202


State 180

   65 statement: IF expr ':' '{' list error ELSE . '{' list '}'

    '{'  shift, and go to state 203


State 181

   49 statement: IF expr ':' '{' list '}' ELSE . '{' list '}'
   63          | IF expr ':' '{' list '}' ELSE . '{' list error
   64          | IF expr ':' '{' list '}' ELSE . error list '}'

    error  shift, and go to state 204
    '{'    shift, and go to state 205


State 182

   80 statement: FOR error decl_list ';' expr ';' assi_list . ')' '{' list '}'

    ')'  shift, and go to state 206


State 183

   79 statement: FOR '(' decl_list error expr ';' assi_list . ')' '{' list '}'

    ')'  shift, and go to state 207


State 184

   78 statement: FOR '(' decl_list ';' expr error assi_list . ')' '{' list '}'

    ')'  shift, and go to state 208


State 185

   52 statement: FOR '(' decl_list ';' expr ';' assi_list . ')' '{' list '}'
   75          | FOR '(' decl_list ';' expr ';' assi_list . ')' '{' list error
   76          | FOR '(' decl_list ';' expr ';' assi_list . ')' error list '}'
   77          | FOR '(' decl_list ';' expr ';' assi_list . error '{' list '}'

    error  shift, and go to state 209
    ')'    shift, and go to state 210


State 186

   74 statement: REPEAT error list '}' UNTILL expr ':' .

    $default  reduce using rule 74 (statement)


State 187

   73 statement: REPEAT '{' list error UNTILL expr ':' .

    $default  reduce using rule 73 (statement)


State 188

   72 statement: REPEAT '{' list '}' error expr ':' .

    $default  reduce using rule 72 (statement)


State 189

   71 statement: REPEAT '{' list '}' UNTILL expr error .

    $default  reduce using rule 71 (statement)


State 190

   51 statement: REPEAT '{' list '}' UNTILL expr ':' .

    $default  reduce using rule 51 (statement)


State 191

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   94 case_block: CASE error . expr ']' list

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 211


State 192

    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   91 case_block: CASE '[' . expr ']' list
   93           | CASE '[' . expr error list

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 31
    STRING_VAL  shift, and go to state 6
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 212


State 193

   92 case_block: DEFAULT list .

    $default  reduce using rule 92 (case_block)


State 194

   84 statement: SWITCH error expr ']' '{' switch_body '}' .

    $default  reduce using rule 84 (statement)


State 195

   89 switch_body: case_block switch_body .

    $default  reduce using rule 89 (switch_body)


State 196

   83 statement: SWITCH '[' expr error '{' switch_body '}' .

    $default  reduce using rule 83 (statement)


State 197

   82 statement: SWITCH '[' expr ']' error switch_body '}' .

    $default  reduce using rule 82 (statement)


State 198

   81 statement: SWITCH '[' expr ']' '{' switch_body error .

    $default  reduce using rule 81 (statement)


State 199

   53 statement: SWITCH '[' expr ']' '{' switch_body '}' .

    $default  reduce using rule 53 (statement)


State 200

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'
   98     | expr ':' '{' list '}' ELSE '{' . list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 213
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 201

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   67          | IF expr error '{' list '}' ELSE '{' . list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 214
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 202

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   66          | IF expr ':' error list '}' ELSE '{' . list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 215
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 203

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   65          | IF expr ':' '{' list error ELSE '{' . list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 216
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 204

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   64          | IF expr ':' '{' list '}' ELSE error . list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 217
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 205

    1 list: . statement list
    2     | . %empty  [error, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   49          | IF expr ':' '{' list '}' ELSE '{' . list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   63          | IF expr ':' '{' list '}' ELSE '{' . list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 218
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 206

   80 statement: FOR error decl_list ';' expr ';' assi_list ')' . '{' list '}'

    '{'  shift, and go to state 219


State 207

   79 statement: FOR '(' decl_list error expr ';' assi_list ')' . '{' list '}'

    '{'  shift, and go to state 220


State 208

   78 statement: FOR '(' decl_list ';' expr error assi_list ')' . '{' list '}'

    '{'  shift, and go to state 221


State 209

   77 statement: FOR '(' decl_list ';' expr ';' assi_list error . '{' list '}'

    '{'  shift, and go to state 222


State 210

   52 statement: FOR '(' decl_list ';' expr ';' assi_list ')' . '{' list '}'
   75          | FOR '(' decl_list ';' expr ';' assi_list ')' . '{' list error
   76          | FOR '(' decl_list ';' expr ';' assi_list ')' . error list '}'

    error  shift, and go to state 223
    '{'    shift, and go to state 224


State 211

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   94 case_block: CASE error expr . ']' list

    AND  shift, and go to state 49
    OR   shift, and go to state 50
    XOR  shift, and go to state 51
    EE   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    GT   shift, and go to state 55
    LE   shift, and go to state 56
    GE   shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '/'  shift, and go to state 60
    '*'  shift, and go to state 61
    ']'  shift, and go to state 225


State 212

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '/' expr
    8     | expr . '*' expr
   10     | expr . AND expr
   11     | expr . OR expr
   12     | expr . XOR expr
   13     | expr . EE expr
   14     | expr . NE expr
   15     | expr . LT expr
   16     | expr . GT expr
   17     | expr . LE expr
   18     | expr . GE expr
   26     | expr . '+' error
   27     | expr . '-' error
   28     | expr . '/' error
   29     | expr . '*' error
   31     | expr . AND error
   32     | expr . OR error
   33     | expr . XOR error
   34     | expr . EE error
   35     | expr . NE error
   36     | expr . LT error
   37     | expr . GT error
   38     | expr . LE error
   39     | expr . GE error
   91 case_block: CASE '[' expr . ']' list
   93           | CASE '[' expr . error list

    error  shift, and go to state 226
    AND    shift, and go to state 49
    OR     shift, and go to state 50
    XOR    shift, and go to state 51
    EE     shift, and go to state 52
    NE     shift, and go to state 53
    LT     shift, and go to state 54
    GT     shift, and go to state 55
    LE     shift, and go to state 56
    GE     shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '/'    shift, and go to state 60
    '*'    shift, and go to state 61
    ']'    shift, and go to state 227


State 213

   98 susp: expr ':' '{' list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 228


State 214

   67 statement: IF expr error '{' list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 229


State 215

   66 statement: IF expr ':' error list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 230


State 216

   65 statement: IF expr ':' '{' list error ELSE '{' list . '}'

    '}'  shift, and go to state 231


State 217

   64 statement: IF expr ':' '{' list '}' ELSE error list . '}'

    '}'  shift, and go to state 232


State 218

   49 statement: IF expr ':' '{' list '}' ELSE '{' list . '}'
   63          | IF expr ':' '{' list '}' ELSE '{' list . error

    error  shift, and go to state 233
    '}'    shift, and go to state 234


State 219

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   80          | FOR error decl_list ';' expr ';' assi_list ')' '{' . list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 235
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 220

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   79          | FOR '(' decl_list error expr ';' assi_list ')' '{' . list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 236
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 221

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   78          | FOR '(' decl_list ';' expr error assi_list ')' '{' . list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 237
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 222

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   77          | FOR '(' decl_list ';' expr ';' assi_list error '{' . list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 238
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 223

    1 list: . statement list
    2     | . %empty  ['}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   76          | FOR '(' decl_list ';' expr ';' assi_list ')' error . list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 239
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 224

    1 list: . statement list
    2     | . %empty  [error, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   52          | FOR '(' decl_list ';' expr ';' assi_list ')' '{' . list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   75          | FOR '(' decl_list ';' expr ';' assi_list ')' '{' . list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 240
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 225

    1 list: . statement list
    2     | . %empty  [error, CASE, DEFAULT, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   94 case_block: CASE error expr ']' . list
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 241
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 226

    1 list: . statement list
    2     | . %empty  [error, CASE, DEFAULT, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   93 case_block: CASE '[' expr error . list
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 242
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 227

    1 list: . statement list
    2     | . %empty  [error, CASE, DEFAULT, '}']
    3     | . susp
    4 expr: . '(' expr ')'
    5     | . expr '+' expr
    6     | . expr '-' expr
    7     | . expr '/' expr
    8     | . expr '*' expr
    9     | . '-' expr
   10     | . expr AND expr
   11     | . expr OR expr
   12     | . expr XOR expr
   13     | . expr EE expr
   14     | . expr NE expr
   15     | . expr LT expr
   16     | . expr GT expr
   17     | . expr LE expr
   18     | . expr GE expr
   19     | . '!' expr
   20     | . BOOL_VAL
   21     | . INT_VAL
   22     | . DOUBLE_VAL
   23     | . STRING_VAL
   24     | . ID
   25     | . '(' expr error
   26     | . expr '+' error
   27     | . expr '-' error
   28     | . expr '/' error
   29     | . expr '*' error
   30     | . '-' error
   31     | . expr AND error
   32     | . expr OR error
   33     | . expr XOR error
   34     | . expr EE error
   35     | . expr NE error
   36     | . expr LT error
   37     | . expr GT error
   38     | . expr LE error
   39     | . expr GE error
   40     | . '!' error
   41 assi_stmnt: . ID '=' expr
   42 decl_stmnt: . ID_TYPE assi_stmnt
   43 statement: . ';'
   44          | . assi_stmnt ';'
   45          | . decl_stmnt ';'
   46          | . CONST decl_stmnt ';'
   47          | . ID_TYPE ID ';'
   48          | . IF expr ':' '{' list '}'
   49          | . IF expr ':' '{' list '}' ELSE '{' list '}'
   50          | . WHILE expr ':' '{' list '}'
   51          | . REPEAT '{' list '}' UNTILL expr ':'
   52          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}'
   53          | . SWITCH '[' expr ']' '{' switch_body '}'
   54          | . BREAK ';'
   55          | . BREAK error
   56          | . assi_stmnt error
   57          | . decl_stmnt error
   58          | . ID_TYPE ID error
   59          | . ID_TYPE error ';'
   60          | . IF expr ':' '{' list error
   61          | . IF expr ':' error list '}'
   62          | . IF expr error '{' list '}'
   63          | . IF expr ':' '{' list '}' ELSE '{' list error
   64          | . IF expr ':' '{' list '}' ELSE error list '}'
   65          | . IF expr ':' '{' list error ELSE '{' list '}'
   66          | . IF expr ':' error list '}' ELSE '{' list '}'
   67          | . IF expr error '{' list '}' ELSE '{' list '}'
   68          | . WHILE expr ':' '{' list error
   69          | . WHILE expr ':' error list '}'
   70          | . WHILE expr error '{' list '}'
   71          | . REPEAT '{' list '}' UNTILL expr error
   72          | . REPEAT '{' list '}' error expr ':'
   73          | . REPEAT '{' list error UNTILL expr ':'
   74          | . REPEAT error list '}' UNTILL expr ':'
   75          | . FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error
   76          | . FOR '(' decl_list ';' expr ';' assi_list ')' error list '}'
   77          | . FOR '(' decl_list ';' expr ';' assi_list error '{' list '}'
   78          | . FOR '(' decl_list ';' expr error assi_list ')' '{' list '}'
   79          | . FOR '(' decl_list error expr ';' assi_list ')' '{' list '}'
   80          | . FOR error decl_list ';' expr ';' assi_list ')' '{' list '}'
   81          | . SWITCH '[' expr ']' '{' switch_body error
   82          | . SWITCH '[' expr ']' error switch_body '}'
   83          | . SWITCH '[' expr error '{' switch_body '}'
   84          | . SWITCH error expr ']' '{' switch_body '}'
   91 case_block: CASE '[' expr ']' . list
   95 susp: . '=' expr
   96     | . '=' expr ';'
   97     | . expr ':' '{' list '}'
   98     | . expr ':' '{' list '}' ELSE '{' list '}'

    INT_VAL     shift, and go to state 1
    DOUBLE_VAL  shift, and go to state 2
    BOOL_VAL    shift, and go to state 3
    ID          shift, and go to state 4
    ID_TYPE     shift, and go to state 5
    STRING_VAL  shift, and go to state 6
    CONST       shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    REPEAT      shift, and go to state 11
    SWITCH      shift, and go to state 12
    BREAK       shift, and go to state 13
    '-'         shift, and go to state 14
    '!'         shift, and go to state 15
    '('         shift, and go to state 16
    '='         shift, and go to state 17
    ';'         shift, and go to state 18

    $default  reduce using rule 2 (list)

    list        go to state 243
    expr        go to state 20
    assi_stmnt  go to state 21
    decl_stmnt  go to state 22
    statement   go to state 23
    susp        go to state 24


State 228

   98 susp: expr ':' '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 98 (susp)


State 229

   67 statement: IF expr error '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 67 (statement)


State 230

   66 statement: IF expr ':' error list '}' ELSE '{' list '}' .

    $default  reduce using rule 66 (statement)


State 231

   65 statement: IF expr ':' '{' list error ELSE '{' list '}' .

    $default  reduce using rule 65 (statement)


State 232

   64 statement: IF expr ':' '{' list '}' ELSE error list '}' .

    $default  reduce using rule 64 (statement)


State 233

   63 statement: IF expr ':' '{' list '}' ELSE '{' list error .

    $default  reduce using rule 63 (statement)


State 234

   49 statement: IF expr ':' '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 49 (statement)


State 235

   80 statement: FOR error decl_list ';' expr ';' assi_list ')' '{' list . '}'

    '}'  shift, and go to state 244


State 236

   79 statement: FOR '(' decl_list error expr ';' assi_list ')' '{' list . '}'

    '}'  shift, and go to state 245


State 237

   78 statement: FOR '(' decl_list ';' expr error assi_list ')' '{' list . '}'

    '}'  shift, and go to state 246


State 238

   77 statement: FOR '(' decl_list ';' expr ';' assi_list error '{' list . '}'

    '}'  shift, and go to state 247


State 239

   76 statement: FOR '(' decl_list ';' expr ';' assi_list ')' error list . '}'

    '}'  shift, and go to state 248


State 240

   52 statement: FOR '(' decl_list ';' expr ';' assi_list ')' '{' list . '}'
   75          | FOR '(' decl_list ';' expr ';' assi_list ')' '{' list . error

    error  shift, and go to state 249
    '}'    shift, and go to state 250


State 241

   94 case_block: CASE error expr ']' list .

    $default  reduce using rule 94 (case_block)


State 242

   93 case_block: CASE '[' expr error list .

    $default  reduce using rule 93 (case_block)


State 243

   91 case_block: CASE '[' expr ']' list .

    $default  reduce using rule 91 (case_block)


State 244

   80 statement: FOR error decl_list ';' expr ';' assi_list ')' '{' list '}' .

    $default  reduce using rule 80 (statement)


State 245

   79 statement: FOR '(' decl_list error expr ';' assi_list ')' '{' list '}' .

    $default  reduce using rule 79 (statement)


State 246

   78 statement: FOR '(' decl_list ';' expr error assi_list ')' '{' list '}' .

    $default  reduce using rule 78 (statement)


State 247

   77 statement: FOR '(' decl_list ';' expr ';' assi_list error '{' list '}' .

    $default  reduce using rule 77 (statement)


State 248

   76 statement: FOR '(' decl_list ';' expr ';' assi_list ')' error list '}' .

    $default  reduce using rule 76 (statement)


State 249

   75 statement: FOR '(' decl_list ';' expr ';' assi_list ')' '{' list error .

    $default  reduce using rule 75 (statement)


State 250

   52 statement: FOR '(' decl_list ';' expr ';' assi_list ')' '{' list '}' .

    $default  reduce using rule 52 (statement)
